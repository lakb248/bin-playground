{"name":"javascript","permalink":"http://bin-playground.top/blog/tags/javascript/","url":"\\async\\tags\\javascript.json","count":2,"_total":2,"_totalPage":1,"_page":1,"posts":[{"tags":[{"name":"javascript","permalink":"http://bin-playground.top/blog/tags/javascript/","url":"\\async\\tags\\javascript.json","count":2}],"categories":[],"url":"\\async\\posts\\2015\\03\\14\\why-prototype-important.json","date":1426296847000,"path":{"year":2015,"month":3,"day":14,"name":"why-prototype-important"},"title":"[译] 为什么原型继承很重要","permalink":"http://bin-playground.top/blog/2015/03/14/why-prototype-important/","content":"<p>五天之前我写了一个关于ES6标准中Class的<a href=\"http://aaditmshah.github.io/standardizing-harmony-classes\">文章</a>。在里面我介绍了如何用现有的Javascript来模拟类并且介绍了ES6中类的用法，其实它只是一个语法糖。感谢<a href=\"http://geekyogi.tumblr.com/\">Om Shakar</a>以及<a href=\"http://rlemon.github.io/so-chat-javascript-rules/\">Javascript Room</a>中的各位，我的编程风格从那时候开始发生了改变；就像<a href=\"http://www.crockford.com/\">Dougla Crockford</a>2006年做的一样，我也学习了很多来完全理解基于原型的编程方式。<br>"},{"tags":[{"name":"javascript","permalink":"http://bin-playground.top/blog/tags/javascript/","url":"\\async\\tags\\javascript.json","count":2}],"categories":[],"url":"\\async\\posts\\2014\\11\\09\\talk-about-javascript-prototype-inheritance.json","date":1415497584000,"path":{"year":2014,"month":11,"day":9,"name":"talk-about-javascript-prototype-inheritance"},"title":"再谈Javascript原型继承","permalink":"http://bin-playground.top/blog/2014/11/09/talk-about-javascript-prototype-inheritance/","content":"<p>真正意义上来说Javascript并不是一门面向对象的语言，没有提供传统的继承方式，但是它提供了一种原型继承的方式，利用自身提供的原型属性来实现继承。Javascript原型继承是一个被说烂掉了的话题，但是自己对于这个问题一直没有彻底理解，今天花了点时间又看了一遍《Javascript模式》中关于原型实现继承的几种方法，下面来一一说明下，在最后我根据自己的理解提出了一个关于继承比较完整的实现，如果大家有不同意见，欢迎建议。<br>"}]}