{"name":"前端优化","permalink":"/tags/前端优化/","url":"/async/tags/前端优化.json","count":4,"_total":4,"_totalPage":1,"_page":1,"posts":[{"tags":[{"name":"javascript","permalink":"/tags/javascript/","url":"/async/tags/javascript.json","count":8},{"name":"前端优化","permalink":"/tags/前端优化/","url":"/async/tags/前端优化.json","count":4}],"categories":[],"url":"/async/posts/2014/05/24/frontend-optimization-javascript-bottom.json","date":1400913772000,"path":{"year":2014,"month":5,"day":24,"name":"frontend-optimization-javascript-bottom"},"title":"前端优化-Javascript篇(1.脚本放在底部)","permalink":"/2014/05/24/frontend-optimization-javascript-bottom/","content":"<p>从本篇博客开始，我会跟大家分享下我关于前端优化方面的学习，由于时间原因每篇博客只能分享一小点内容，一点点深入前端优化的细节。<br>　　做过前端的人都知道，前端优化是一个永远都不会停止的话题(当然，不管是哪个技术，优化总是无止境的)。在前端优化这个问题上，最被大家熟知的应该就是雅虎前端优化14条军规以及雅虎前端优化34条规则。大部分也都已经应用到了实际开发中。而我的分享并不是按照优化建议来进行的，我的计划是整个优化按照不同模块进行划分，分别是Javascript，CSS，HTML还有其他的一些细节。今天就先从Javascript开始。<br>"},{"tags":[{"name":"javascript","permalink":"/tags/javascript/","url":"/async/tags/javascript.json","count":8},{"name":"前端优化","permalink":"/tags/前端优化/","url":"/async/tags/前端优化.json","count":4}],"categories":[],"url":"/async/posts/2014/06/02/frontend-optimization-javascript-async-load.json","date":1401691399000,"path":{"year":2014,"month":6,"day":2,"name":"frontend-optimization-javascript-async-load"},"title":"前端优化-Javascript篇(2.异步加载脚本)","permalink":"/2014/06/02/frontend-optimization-javascript-async-load/","content":"<p>上篇博客说过脚本后置可以使页面更快的加载，可是这样的优化还是有限的，如果脚本需要执行一个耗时的操作，就算后置了它还是会阻塞后续脚本加载和执行并且阻塞整个页面。下面介绍非阻塞加载脚本技术也就是异步加载。<br>"},{"tags":[{"name":"javascript","permalink":"/tags/javascript/","url":"/async/tags/javascript.json","count":8},{"name":"前端优化","permalink":"/tags/前端优化/","url":"/async/tags/前端优化.json","count":4}],"categories":[],"url":"/async/posts/2014/06/05/frontend-optimization-javascript-identifier.json","date":1401950625000,"path":{"year":2014,"month":6,"day":5,"name":"frontend-optimization-javascript-identifier"},"title":"前端优化-Javascript篇(3.标识符查找优化)","permalink":"/2014/06/05/frontend-optimization-javascript-identifier/","content":"<p>前面两篇文章介绍了Javascript文件在页面中位置以及异步加载问题对前端性能的影响。不过受限于单线程的原因，不管采用哪种方法，只要Javascript进行了耗时的工作，就都会引起页面的阻塞。所以在写代码的过程中应该注意一些会影响代码性能的问题，这样才能让我们的优化尽量做到极致。下面我跟大家分享关于标识符查找方面的优化问题。<br>"},{"tags":[{"name":"javascript","permalink":"/tags/javascript/","url":"/async/tags/javascript.json","count":8},{"name":"前端优化","permalink":"/tags/前端优化/","url":"/async/tags/前端优化.json","count":4}],"categories":[],"url":"/async/posts/2014/06/16/frontend-optimization-javascript-dom.json","date":1402901051000,"path":{"year":2014,"month":6,"day":16,"name":"frontend-optimization-javascript-dom"},"title":"前端优化-Javascript篇(4.DOM优化)","permalink":"/2014/06/16/frontend-optimization-javascript-dom/","content":"<p>上篇我介绍了Javascript标识符查找方面的优化，可以看出在这方面的优化给性能带来的提升并不明显，甚至可以说基本没有影响。但是，我今天要分享的是前端Javascript优化的一个大头。众所周知，在浏览器端Javascript中DOM操作相比普通Javascript代码来说是比较耗时的，所以在DOM优化上下功夫可以收到相当可观的性能优化。下面我将分享几个DOM方面的性能优化策略。<br>"}]}